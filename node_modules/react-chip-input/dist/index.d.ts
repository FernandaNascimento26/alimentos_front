/**
 * @class ReactChipInput
 */
import * as React from 'react';
/**Type of Input-Props */
export declare type Props = {
    /**Emits index */
    onRemove: Function;
    /**Array of chips */
    chips: string[];
    /**Extra classes */
    classes: string;
    /**Emits value */
    onSubmit: Function;
};
export default class ReactChipInput extends React.Component<Props> {
    /**Ref object for input */
    formControlRef: any;
    /**State of the component */
    state: {
        focused: boolean;
        exitingIndex: number;
    };
    constructor(props: Readonly<Props>);
    /**Called when user clicks on remove icon.
     * And in turn, onRemove of props called, wih index passed as argument.
     */
    removeChip: (index: number) => void;
    /**When user double clicks on any chip, it will start editing. */
    editChip: (index: number) => void;
    /**This is needed, as chips array will get changed frequently. */
    componentDidUpdate(prevProps: Readonly<Props>): void;
    render(): JSX.Element;
}
